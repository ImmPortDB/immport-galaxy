<tool id="FCStxtmerge" name="Merge txt-converted FCS files" version="1.0">
  <description>into one text file based on headers</description>
  <command interpreter="python">FCStxtmerge.py -o $output_file
 #if $columns 
   -c $columns
 #end if
 #for $f in $input#
    -i $f
 #end for#
  </command>
  <inputs>
    <param format="txt,tabular,flowtext" name="input" type="data_collection" collection_type="list" label="Test Collection"/>
    <param name="columns" type="text" label="Merge columns:" value="i.e.:1,2,5" optional="true" help="By default, will merge on the columns in common to all files.">
	</param>
  </inputs>
  <outputs>
    <data format="flowtext" name="output_file" label="Merge flowtext on ${input.name}"/>
  </outputs>
  <stdio>
    <exit_code range="2" level="warning" description="Non-numeric data. See stderr for more details." />
    <exit_code range="3" level="warning" description="Selected columns do not exist in all files" />
    <exit_code range="4" level="fatal" description="Run aborted - too many errors" />
    <exit_code range="5" level="warning" description="Selected columns do not exist in all files, non-numeric data detected." />
    <exit_code range="6" level="fatal" description="Please provide integers for columns you want to merge on." />
    <exit_code range="7" level="fatal" description="Please provide a comma separated list of integers for columns you want to merge on." />
  </stdio>
 <help>
   This tool merges multipe txt-converted FCS files into one text file.

-----

**Input files**

This tool can take collections of txt, flowtext or tabular files as input.

**Output file**

The output flowtext file contains the concatenated input files provided that all lines after the header line contain only numbers.
By default, only the columns that exist in all input files (as assessed by the header) are concatenated. The user can specify the columns to merge, bypassing the headers check.

.. class:: warningmark

Potential errors are logged to stderr. If the number of errors reaches 10, the run is aborted.

-----

**Example**

*File1*::

   Marker1 Marker2 Marker3
   34      45      12
   33      65      10
   
*File2*::

   Marker4 Marker5 Marker3
   19      62      98
   12      36      58

*Output*

.. class:: infomark

If run without specifying the columns::

   Marker3 
   12 
   10 
   98 
   58 

.. class:: infomark

If run specifying columns 1,2,3::

   Marker1 Marker2 Marker3
   34      45      12
   33      65      10
   19      62      98
   12      36      58
 </help>
</tool>
