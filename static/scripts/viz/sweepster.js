define("viz/sweepster",["exports","utils/localization","libs/underscore","libs/d3","viz/trackster/util","viz/visualization","viz/trackster/tracks","mvc/tool/tools","mvc/dataset/data","utils/config","mvc/ui/icon-button"],function(e,t,n,a,i,o,r,l,s,c,d){"use strict";function u(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}function _(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(e,"__esModule",{value:!0});var h=_(t),m=u(n),p=u(a),g=(_(i),_(o)),f=_(r),v=_(l),k=_(s),w=_(c),b=_(d),y=Backbone.Model.extend({defaults:{inputs:null,values:null}}),x=Backbone.Model.extend({defaults:{tool:null,tree_data:null},initialize:function(e){var t=this;this.get("tool").get("inputs").each(function(e){e.on("change:min change:max change:num_samples",function(e){e.get("in_ptree")&&t.set_tree_data()},t),e.on("change:in_ptree",function(e){e.get("in_ptree")?t.add_param(e):t.remove_param(e),t.set_tree_data()},t)}),e.config&&m.each(e.config,function(e){var n=t.get("tool").get("inputs").find(function(t){return t.get("name")===e.name});t.add_param(n),n.set(e)})},add_param:function(e){e.get("ptree_index")||(e.set("in_ptree",!0),e.set("ptree_index",this.get_tree_params().length))},remove_param:function(e){e.set("in_ptree",!1),e.set("ptree_index",null),m(this.get_tree_params()).each(function(e,t){e.set("ptree_index",t+1)})},set_tree_data:function(){var e=m.map(this.get_tree_params(),function(e){return{param:e,samples:e.get_samples()}}),t=0;this.set("tree_data",{name:"Root",id:t++,children:0!==e.length?function e(n,a){var i=n[a],o=i.param,r=(o.get("label"),i.samples);return n.length-1===a?m.map(r,function(e){return{id:t++,name:e,param:o,value:e}}):m.map(r,function(i){return{id:t++,name:i,param:o,value:i,children:e(n,a+1)}})}(e,0):null})},get_tree_params:function(){return m(this.get("tool").get("inputs").where({in_ptree:!0})).sortBy(function(e){return e.get("ptree_index")})},get_num_leaves:function(){return this.get_tree_params().reduce(function(e,t){return e*t.get_samples().length},1)},get_node_settings:function(e){var t=this.get("tool").get_inputs_dict(),n=e.parent;if(n)for(;0!==n.depth;)t[n.param.get("name")]=n.value,n=n.parent;var a=this,i=function e(t,n){return t.param&&(n[t.param.get("name")]=t.value),t.children?m.flatten(m.map(t.children,function(t){return e(t,m.clone(n))})):new y({inputs:a.get("tool").get("inputs"),values:n})}(e,t);return m.isArray(i)||(i=[i]),i},get_connected_nodes:function(e){for(var t=[],n=e.parent;n;)t.push(n),n=n.parent;return m.flatten([t,function e(t){return t.children?m.flatten([t,m.map(t.children,function(t){return e(t)})]):t}(e)])},get_leaf:function(e){for(var t=this.get("tree_data");t.children;)t=function(t){return m.find(t,function(t){return e[t.param.get("name")]===t.value})}(t.children);return t},toJSON:function(){return this.get_tree_params().map(function(e){return{name:e.get("name"),min:e.get("min"),max:e.get("max"),num_samples:e.get("num_samples")}})}}),z=Backbone.Model.extend({defaults:{track:null,mode:"Pack",settings:null,regions:null},initialize:function(e){if(this.set("regions",e.regions),e.track){var t=m.extend({data_url:Galaxy.root+"dummy1",converted_datasets_state_url:Galaxy.root+"dummy2"},e.track);this.set("track",f.default.object_from_template(t,{},null))}},same_settings:function(e){var t=this.get("settings"),n=e.get("settings");for(var a in t)if(!n[a]||t[a]!==n[a])return!1;return!0},toJSON:function(){return{track:this.get("track").to_dict(),settings:this.get("settings"),regions:this.get("regions")}}}),C=Backbone.Collection.extend({model:z}),S=g.default.Visualization.extend({defaults:m.extend({},g.default.Visualization.prototype.defaults,{dataset:null,tool:null,parameter_tree:null,regions:null,tracks:null,default_mode:"Pack"}),initialize:function(e){this.set("dataset",new k.default.Dataset(e.dataset)),this.set("tool",new v.default.Tool(e.tool)),this.set("regions",new g.default.GenomeRegionCollection(e.regions)),this.set("tracks",new C(e.tracks));var t=this.get("tool");this.set("tool_with_samplable_inputs",t),t.remove_inputs(["data","hidden_data","conditional","text"]),this.set("parameter_tree",new x({tool:t,config:e.tree_config}))},add_track:function(e){this.get("tracks").add(e)},toJSON:function(){return{id:this.get("id"),title:"Parameter exploration for dataset '"+this.get("dataset").get("name")+"'",type:"sweepster",dataset_id:this.get("dataset").id,tool_id:this.get("tool").id,regions:this.get("regions").toJSON(),tree_config:this.get("parameter_tree").toJSON(),tracks:this.get("tracks").toJSON()}}}),A=Backbone.View.extend({tagName:"tr",TILE_LEN:250,initialize:function(e){this.canvas_manager=e.canvas_manager,this.render(),this.model.on("change:track change:mode",this.draw_tiles,this)},render:function(){var e=this.model.get("settings"),t=e.get("values"),n=$("<td/>").addClass("settings").appendTo(this.$el),a=$("<div/>").addClass("track-info").hide().appendTo(n);a.append($("<div/>").css("font-weight","bold").text("Track Settings")),e.get("inputs").each(function(e){a.append(e.get("label")+": "+t[e.get("name")]+"<br/>")});var i=this,o=($("<button/>").appendTo(a).text("Run on complete dataset").click(function(){a.toggle(),i.trigger("run_on_dataset",e)}),b.default.create_icon_buttons_menu([{title:(0,h.default)("Settings"),icon_class:"gear track-settings",on_click:function(){a.toggle()}},{title:(0,h.default)("Remove"),icon_class:"cross-circle",on_click:function(){i.$el.remove(),$(".tooltip").remove()}}]));n.prepend(o.$el),this.model.get("regions").each(function(){i.$el.append($("<td/>").addClass("tile").html($("<img/>").attr("src",Galaxy.root+"images/loading_large_white_bg.gif")))}),this.model.get("track")&&this.draw_tiles()},draw_tiles:function(){var e=this,t=this.model.get("track"),n=this.model.get("regions"),a=this.$el.find("td.tile");t&&$.when(t.data_manager.data_is_ready()).then(function(i){n.each(function(n,i){var o=n.length()/e.TILE_LEN,r=1/o,l=e.model.get("mode");$.when(t.data_manager.get_data(n,l,o,{})).then(function(o){var s=e.canvas_manager.new_canvas();s.width=e.TILE_LEN,s.height=t.get_canvas_height(o,l,r,s.width),t.draw_tile(o,s.getContext("2d"),l,n,r),$(a[i]).empty().append(s)})})})}}),N=Backbone.View.extend({number_input_template:'<div class="form-row-input sweep"><input class="min" type="text" size="6" value="<%= min %>"> - <input class="max" type="text" size="6" value="<%= max %>"> samples: <input class="num_samples" type="text" size="1" value="<%= num_samples %>"></div>',select_input_template:'<div class="form-row-input sweep"><%= options %></div>',initialize:function(e){this.$el=e.tool_row,this.render()},render:function(){var e=this.model,t=(e.get("type"),this.$el.find(".form-row-input")),n=null;if(t.find(":input").change(function(){e.set("value",$(this).val())}),e instanceof v.default.IntegerToolParameter)n=$(m.template(this.number_input_template)(this.model.toJSON()));else if(e instanceof v.default.SelectToolParameter){var a=m.map(this.$el.find("select option"),function(e){return $(e).val()}).join(", ");n=$(m.template(this.select_input_template)({options:a}))}n.insertAfter(t);var i=this,o=b.default.create_icon_buttons_menu([{title:(0,h.default)("Add parameter to tree"),icon_class:"plus-button",on_click:function(){e.set("in_ptree",!0),t.hide(),n.show(),$(this).hide(),i.$el.find(".icon-button.toggle").show()}},{title:(0,h.default)("Remove parameter from tree"),icon_class:"toggle",on_click:function(){e.set("in_ptree",!1),n.hide(),t.show(),$(this).hide(),i.$el.find(".icon-button.plus-button").show()}}],{});this.$el.prepend(o.$el),e.get("in_ptree")?(t.hide(),i.$el.find(".icon-button.plus-button").hide()):(i.$el.find(".icon-button.toggle").hide(),n.hide()),m.each(["min","max","num_samples"],function(t){n.find("."+t).change(function(){e.set(t,parseFloat($(this).val()))})})}}),T=Backbone.View.extend({className:"tree-design",initialize:function(e){this.render()},render:function(){var e=new v.default.ToolFormView({model:this.model.get("tool")});e.render(),this.$el.append(e.$el);var t=this.model.get("tool").get("inputs");this.$el.find(".form-row").not(".form-actions").each(function(e){new N({model:t.at(e),tool_row:$(this)})})}}),O=Backbone.View.extend({className:"tool-parameter-tree",initialize:function(e){this.model.on("change:tree_data",this.render,this)},render:function(){this.$el.children().remove();var e=this.model.get_tree_params();if(e.length){this.width=100*(2+e.length),this.height=15*this.model.get_num_leaves();var t=this,n=p.layout.cluster().size([this.height,this.width-160]),a=p.svg.diagonal().projection(function(e){return[e.y,e.x]}),i=n.nodes(this.model.get("tree_data")),o=m.uniq(m.pluck(i,"y"));m.each(e,function(e,n){var a=o[n+1],i=$("#center").position().left;t.$el.append($("<div>").addClass("label").text(e.get("label")).css("left",a+i))});var r=p.select(this.$el[0]).append("svg").attr("width",this.width).attr("height",this.height+30).append("g").attr("transform","translate(40, 20)"),l=(r.selectAll("path.link").data(n.links(i)).enter().append("path").attr("class","link").attr("d",a),r.selectAll("g.node").data(i).enter().append("g").attr("class","node").attr("transform",function(e){return"translate("+e.y+","+e.x+")"}).on("mouseover",function(e){var n=m.pluck(t.model.get_connected_nodes(e),"id");l.filter(function(e){return void 0!==m.find(n,function(t){return t===e.id})}).style("fill","#f00")}).on("mouseout",function(){l.style("fill","#000")}));l.append("circle").attr("r",9),l.append("text").attr("dx",function(e){return e.children?-12:12}).attr("dy",3).attr("text-anchor",function(e){return e.children?"end":"start"}).text(function(e){return e.name})}}}),F=Backbone.View.extend({className:"Sweepster",helpText:"<div><h4>Getting Started</h4><ol><li>Create a parameter tree by using the icons next to the tool's parameter names to add or remove parameters.<li>Adjust the tree by using parameter inputs to select min, max, and number of samples<li>Run the tool with different settings by clicking on tree nodes</ol></div>",initialize:function(e){this.canvas_manager=new g.default.CanvasManager(this.$el.parents("body")),this.tool_param_tree_view=new O({model:this.model.get("parameter_tree")}),this.track_collection_container=$("<table/>").addClass("tracks"),this.model.get("parameter_tree").on("change:tree_data",this.handle_node_clicks,this);var t=this;this.model.get("tracks").each(function(e){e.get("track").view=t}),this.config=w.default.ConfigSettingCollection.from_models_and_saved_values([{key:"name",label:"Name",type:"text",default_value:""},{key:"a_color",label:"A Color",type:"color",default_value:"#FF0000"},{key:"c_color",label:"C Color",type:"color",default_value:"#00FF00"},{key:"g_color",label:"G Color",type:"color",default_value:"#0000FF"},{key:"t_color",label:"T Color",type:"color",default_value:"#FF00FF"},{key:"n_color",label:"N Color",type:"color",default_value:"#AAAAAA"},{key:"block_color",label:"Block color",type:"color"},{key:"reverse_strand_color",label:"Antisense strand color",type:"color"}],{})},render:function(){var e=new T({model:this.model.get("parameter_tree")});$("#left").append(e.$el);var t=this,n=t.model.get("regions"),a=$("<tr/>").appendTo(this.track_collection_container);n.each(function(e){a.append($("<th>").text(e.toString()))}),a.children().first().attr("colspan",2);var i=$("<div>").addClass("tiles");$("#right").append(i.append(this.track_collection_container)),t.model.get("tracks").each(function(e){t.add_track(e)});var o=$(this.helpText).addClass("help"),r=b.default.create_icon_buttons_menu([{title:(0,h.default)("Close"),icon_class:"cross-circle",on_click:function(){$(".tooltip").remove(),o.remove()}}]);o.prepend(r.$el.css("float","right")),$("#center").append(o),this.tool_param_tree_view.render(),$("#center").append(this.tool_param_tree_view.$el),this.handle_node_clicks();var l=b.default.create_icon_buttons_menu([{icon_class:"chevron-expand",title:"Set display mode"},{icon_class:"cross-circle",title:(0,h.default)("Close"),on_click:function(){window.top.location=Galaxy.root+"visualizations/list"}}],{tooltip_config:{placement:"bottom"}}),s=["Squish","Pack"],c={};m.each(s,function(e){c[e]=function(){t.model.set("default_mode",e),t.model.get("tracks").each(function(t){t.set("mode",e)})}}),make_popupmenu(l.$el.find(".chevron-expand"),c),l.$el.attr("style","float: right"),$("#right .unified-panel-header-inner").append(l.$el)},get_base_color:function(e){return this.config.get_value(e.toLowerCase()+"_color")||this.config.get_value("n_color")},run_tool_on_dataset:function(e){var t=this.model.get("tool"),n=t.get("name"),a=this.model.get("dataset");t.set_input_values(e.get("values")),$.when(t.rerun(a)).then(function(e){}),show_modal("Running "+n+" on complete dataset",n+" is running on dataset '"+a.get("name")+"'. Outputs are in the dataset's history.",{Ok:function(){hide_modal()}})},add_track:function(e){var t=this,n=this.model.get("parameter_tree");t.model.add_track(e);var a=new A({model:e,canvas_manager:t.canvas_manager});return a.on("run_on_dataset",t.run_tool_on_dataset,t),t.track_collection_container.append(a.$el),a.$el.hover(function(){var a=n.get_leaf(e.get("settings").get("values")),i=m.pluck(n.get_connected_nodes(a),"id");p.select(t.tool_param_tree_view.$el[0]).selectAll("g.node").filter(function(e){return void 0!==m.find(i,function(t){return t===e.id})}).style("fill","#f00")},function(){p.select(t.tool_param_tree_view.$el[0]).selectAll("g.node").style("fill","#000")}),e},handle_node_clicks:function(){var e=this,t=this.model.get("parameter_tree"),n=this.model.get("regions");p.select(this.tool_param_tree_view.$el[0]).selectAll("g.node").on("click",function(a,i){var o=e.model.get("tool"),r=e.model.get("dataset"),l=t.get_node_settings(a),s=$.Deferred();l.length>=10?show_modal("Whoa there cowboy!","You clicked on a node to try "+e.model.get("tool").get("name")+" with "+l.length+" different combinations of settings. You can only run 10 jobs at a time.",{Ok:function(){hide_modal(),s.resolve(!1)}}):s.resolve(!0),$.when(s).then(function(t){if(t){var a=m.map(l,function(t){var a=new z({settings:t,regions:n,mode:e.model.get("default_mode")});return e.add_track(a),a});m.each(a,function(t,a){setTimeout(function(){o.set_input_values(t.get("settings").get("values")),$.when(o.rerun(r,n)).then(function(n){var a=n.first(),i=a.get("track_config");i.dataset=a,i.tool=null,i.prefs=e.config.to_key_value_dict();var o=f.default.object_from_template(i,e,null);o.init_for_tool_data(),t.set("track",o)})},1e4*a)})}})})}});e.default={SweepsterVisualization:S,SweepsterVisualizationView:F}});